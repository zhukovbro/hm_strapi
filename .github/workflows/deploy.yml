name: Build and Deploy Docker Image for Strapi2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t strapi:latest .
          docker save strapi:latest -o strapi.tar

      - name: Upload Docker image to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: strapi-image
          path: strapi.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image from GitHub artifacts
        uses: actions/download-artifact@v2
        with:
          name: strapi-image
          path: .

      - name: Copy Docker image to VPS
        uses: appleboy/scp-action@v0.1.0
        with:
          source: "strapi.tar"
          target: "/root/docker_images/"
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /root/docker_images
            docker load -i strapi.tar
            docker stop strapi || true
            docker rm strapi || true
            echo "HOST=${{ secrets.HOST }}"
            echo "PORT=${{ secrets.PORT }}"
            echo "APP_KEYS=${{ secrets.APP_KEYS }}"
            echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}"
            echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}"
            echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}"
            echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}"
            echo "DATABASE_FILENAME=${{ secrets.DATABASE_FILENAME }}"
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"
            echo "URL=${{ secrets.URL }}"
            docker run -d -p 3005:1337 --name strapi \
              -e HOST='${{ secrets.HOST }}' \
              -e PORT='${{ secrets.PORT }}' \
              -e APP_KEYS='${{ secrets.APP_KEYS }}' \
              -e API_TOKEN_SALT='${{ secrets.API_TOKEN_SALT }}' \
              -e ADMIN_JWT_SECRET='${{ secrets.ADMIN_JWT_SECRET }}' \
              -e TRANSFER_TOKEN_SALT='${{ secrets.TRANSFER_TOKEN_SALT }}' \
              -e DATABASE_CLIENT='${{ secrets.DATABASE_CLIENT }}' \
              -e DATABASE_FILENAME='${{ secrets.DATABASE_FILENAME }}' \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -e URL='${{ secrets.URL }}' \
              -v strapi-db:/app/.tmp/data.db \
              strapi:latest
            docker logs strapi
          debug: true

      - name: Clean up Docker
        run: |
          docker system prune -a -f
